---
export interface Props {
  title: string;
  subtitle?: string;
  description?: string;
  backgroundImage?: string;
  ctaText?: string;
  ctaLink?: string;
  variant?: 'default' | 'minimal' | 'image';
  sideImageSrc?: string;
  sideImageAlt?: string;
}

const {
  title,
  subtitle,
  description,
  backgroundImage,
  ctaText,
  ctaLink,
  variant = 'default',
  sideImageSrc,
  sideImageAlt
} = Astro.props;
---

<section 
  class={`relative py-16 md:py-24 ${
    variant === 'image' ? 'text-white' : 'bg-gradient-to-br from-brand-paper to-brand-light/20'
  }`}
  role="banner"
>
  {backgroundImage && (
    <div class="absolute inset-0 z-0">
      <img 
        src={backgroundImage} 
        alt="" 
        class="w-full h-full object-cover"
        loading="eager"
      />
      <div class="absolute inset-0 bg-brand-navy/70"></div>
    </div>
  )}
  
  <div class="container mx-auto px-4 relative z-10">
    {sideImageSrc ? (
      <div class="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
        <div class="flex flex-col justify-center">
          {subtitle && (
            <p class={`text-sm font-medium uppercase tracking-wider mb-4 ${
              variant === 'image' ? 'text-brand-light' : 'text-brand-gray'
            }`}>
              {subtitle}
            </p>
          )}
          
          <h1 class={`font-serif font-bold leading-tight mb-6 ${
            variant === 'minimal' 
              ? 'text-3xl md:text-4xl lg:text-5xl' 
              : 'text-4xl md:text-5xl lg:text-6xl'
          } ${
            variant === 'image' ? 'text-white' : 'text-brand-navy'
          }`}>
            {title}
          </h1>
          
          {description && (
            <p class={`text-lg md:text-xl leading-relaxed mb-8 max-w-3xl ${
              variant === 'image' ? 'text-brand-light' : 'text-brand-gray'
            }`}>
              {description}
            </p>
          )}
          
          {ctaText && ctaLink && (
            <div class="flex flex-col sm:flex-row gap-4">
              <a 
                href={ctaLink}
                class={`inline-flex items-center justify-center px-8 py-4 rounded-lg font-semibold transition-all transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-offset-2 ${
                  variant === 'image' 
                    ? 'bg-white text-brand-navy hover:bg-brand-light focus:ring-white' 
                    : 'bg-brand-navy text-white hover:bg-opacity-90 focus:ring-brand-navy'
                }`}
              >
                {ctaText}
                <svg class="ml-2 w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
                </svg>
              </a>
            </div>
          )}
        </div>

        <div class="relative w-full h-64 sm:h-80 lg:h-[28rem] flex items-center justify-center">
          <img
            src={sideImageSrc}
            alt={sideImageAlt || ''}
            class="w-full h-full object-cover rounded-xl shadow-xl"
            loading="eager"
          />
        </div>
      </div>
    ) : (
      <div class={`max-w-4xl ${variant === 'minimal' ? 'text-center mx-auto' : ''}`}>
      
      {subtitle && (
        <p class={`text-sm font-medium uppercase tracking-wider mb-4 ${
          variant === 'image' ? 'text-brand-light' : 'text-brand-gray'
        }`}>
          {subtitle}
        </p>
      )}
      
      <h1 class={`font-serif font-bold leading-tight mb-6 ${
        variant === 'minimal' 
          ? 'text-3xl md:text-4xl lg:text-5xl' 
          : 'text-4xl md:text-5xl lg:text-6xl'
      } ${
        variant === 'image' ? 'text-white' : 'text-brand-navy'
      }`}>
        {title}
      </h1>
      
      {description && (
        <p class={`text-lg md:text-xl leading-relaxed mb-8 max-w-3xl mx-auto ${
          variant === 'image' ? 'text-brand-light' : 'text-brand-gray'
        }`}>
          {description}
        </p>
      )}
      
      {ctaText && ctaLink && (
        <div class="flex flex-col sm:flex-row gap-4 justify-center">
          <a 
            href={ctaLink}
            class={`inline-flex items-center justify-center px-8 py-4 rounded-lg font-semibold transition-all transform hover:scale-105 focus:outline-none focus:ring-2 focus:ring-offset-2 ${
              variant === 'image' 
                ? 'bg-white text-brand-navy hover:bg-brand-light focus:ring-white' 
                : 'bg-brand-navy text-white hover:bg-opacity-90 focus:ring-brand-navy'
            }`}
          >
            {ctaText}
            <svg class="ml-2 w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
            </svg>
          </a>
        </div>
      )}
      </div>
    )}
  </div>
  
  <!-- Decorative elements for modern design -->
  {variant === 'default' && (
    <div class="absolute bottom-0 left-0 w-full overflow-hidden">
      <svg class="relative block w-full h-12" viewBox="0 0 1200 120" preserveAspectRatio="none">
        <path d="M0,0V46.29c47.79,22.2,103.59,32.17,158,28,70.36-5.37,136.33-33.31,206.8-37.5C438.64,32.43,512.34,53.67,583,72.05c69.27,18,138.3,24.88,209.4,13.08,36.15-6,69.85-17.84,104.45-29.34C989.49,25,1113-14.29,1200,52.47V0Z" opacity=".25" fill="currentColor" class="text-white"></path>
        <path d="M0,0V15.81C13,36.92,27.64,56.86,47.69,72.05,99.41,111.27,165,111,224.58,91.58c31.15-10.15,60.09-26.07,89.67-39.8,40.92-19,84.73-46,130.83-49.67,36.26-2.85,70.9,9.42,98.6,31.56,31.77,25.39,62.32,62,103.63,73,40.44,10.79,81.35-6.69,119.13-24.28s75.16-39,116.92-43.05c59.73-5.85,113.28,22.88,168.9,38.84,30.2,8.66,59,6.17,87.09-7.5,22.43-10.89,48-26.93,60.65-49.24V0Z" opacity=".5" fill="currentColor" class="text-white"></path>
        <path d="M0,0V5.63C149.93,59,314.09,71.32,475.83,42.57c43-7.64,84.23-20.12,127.61-26.46,59-8.63,112.48,12.24,165.56,35.4C827.93,77.22,886,95.24,951.2,90c86.53-7,172.46-45.71,248.8-84.81V0Z" fill="currentColor" class="text-white"></path>
      </svg>
    </div>
  )}
</section>

