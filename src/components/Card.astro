---
export interface Props {
  title: string;
  description?: string;
  image?: string;
  href?: string;
  date?: string;
  author?: string;
  tags?: string[];
  featured?: boolean;
  variant?: 'default' | 'horizontal' | 'minimal';
  class?: string;
}

const {
  title,
  description,
  image,
  href,
  date,
  author,
  tags = [],
  featured = false,
  variant = 'default',
  class: className = ''
} = Astro.props;

const CardTag = href ? 'a' : 'div';
---

<CardTag 
  href={href}
  class={`${className} card group block transition-all duration-300 ${
    featured ? 'ring-2 ring-brand-navy/20' : ''
  } ${
    href ? 'hover:shadow-lg hover:-translate-y-1 cursor-pointer' : ''
  } ${
    variant === 'horizontal' ? 'flex flex-col md:flex-row' : ''
  }`}
>
  {image && (
    <div class={`relative overflow-hidden ${
      variant === 'horizontal' 
        ? 'md:w-1/3 h-48 md:h-auto' 
        : 'h-48 w-full'
    } ${
      variant === 'minimal' ? 'rounded-t-lg' : 'rounded-t-lg'
    }`}>
      <img 
        src={image} 
        alt={title}
        class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
        loading="lazy"
      />
      {featured && (
        <div class="absolute top-4 left-4">
          <span class="bg-brand-navy text-white px-3 py-1 rounded-full text-sm font-medium">
            Featured
          </span>
        </div>
      )}
    </div>
  )}
  
  <div class={`p-6 flex-1 ${
    variant === 'horizontal' && image ? 'md:p-8' : ''
  }`}>
    
    {(date || author || tags.length > 0) && (
      <div class="flex flex-wrap items-center gap-2 mb-3 text-sm text-brand-gray">
        {date && (
          <time datetime={date} class="flex items-center">
            <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
            </svg>
            {new Date(date).toLocaleDateString('en-US', { 
              year: 'numeric', 
              month: 'long', 
              day: 'numeric' 
            })}
          </time>
        )}
        
        {author && (
          <>
            {date && <span class="text-brand-light">•</span>}
            <span class="flex items-center">
              <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
              </svg>
              {author}
            </span>
          </>
        )}
        
        {tags.length > 0 && (
          <>
            {(date || author) && <span class="text-brand-light">•</span>}
            <div class="flex flex-wrap gap-1">
              {tags.slice(0, 2).map(tag => (
                <span class="bg-brand-light/30 text-brand-navy px-2 py-1 rounded text-xs">
                  {tag}
                </span>
              ))}
            </div>
          </>
        )}
      </div>
    )}
    
    <h3 class={`font-serif font-bold text-brand-navy mb-3 leading-tight ${
      featured || variant === 'horizontal' 
        ? 'text-xl md:text-2xl' 
        : 'text-lg md:text-xl'
    } ${
      href ? 'group-hover:text-brand-gray transition-colors' : ''
    }`}>
      {title}
    </h3>
    
    {description && (
      <p class="text-brand-gray leading-relaxed mb-4 line-clamp-3">
        {description}
      </p>
    )}
    
    {href && (
      <div class="flex items-center text-brand-navy font-medium group-hover:text-brand-gray transition-colors">
        <span>Read more</span>
        <svg class="w-4 h-4 ml-1 transition-transform group-hover:translate-x-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
        </svg>
      </div>
    )}
  </div>
</CardTag>

<style>
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>

